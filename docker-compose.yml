version: '2.1'
services:

  app:
    image: session-segmenter:1
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_SCHEMA_REGISTRY: "http://schema-registry:8081"
    depends_on:
      - kafka
      - schema-registry

  driver:
    image: session-segmenter-driver:1
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_SCHEMA_REGISTRY: "http://schema-registry:8081"
      MODE: "${MODE:-demo}" # or: fullspeed
    depends_on:
      - kafka
      - schema-registry

  reader:
    image: session-segmenter-reader:1
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_SCHEMA_REGISTRY: "http://schema-registry:8081"
    depends_on:
      - kafka
      - schema-registry

  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.1.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 5

  schema-registry:
    image: confluentinc/cp-schema-registry:5.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'